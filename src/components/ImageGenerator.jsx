import React, { useState } from 'react';
import { toast } from 'react-toastify';

const basicTranslations = {
  '—á–µ—Ä–Ω–∞—è': 'black',
  '–ø–∞–Ω—Ç–µ—Ä–∞': 'panther',
  '–∫–∏–±–µ—Ä–ø–∞–Ω–∫': 'cyberpunk',
  '—è—â–µ—Ä–∏—Ü–∞': 'lizard',
  '–¥—Ä–∞–∫–æ–Ω': 'dragon',
  '–∫—Ä–∞—Å–Ω—ã–π': 'red',
  '—Å–∏–Ω–∏–π': 'blue',
  '–∑–µ–ª–µ–Ω—ã–π': 'green',
  '–∫–æ—Ç': 'cat',
  '—Å–æ–±–∞–∫–∞': 'dog',
  '—Ä–æ–±–æ—Ç': 'robot',
  '–≥–æ—Ä–æ–¥': 'city',
  '–∫–æ—Å–º–æ—Å': 'space',
  '–ø—Ä–∏—Ä–æ–¥–∞': 'nature',
};

const fallbackTranslate = (text) => {
  const words = text.toLowerCase().split(' ');
  const translated = words.map((word) => basicTranslations[word] || word);
  return translated.join(' ');
};

const translateWithTimeout = async (text, timeout = 5000) => {
  try {
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), timeout);

    const response = await fetch('https://translator.stronga791alice.workers.dev/', {
      method: 'POST',
      signal: controller.signal,
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        text: text,
        source_lang: 'ru',
        target_lang: 'en',
      }),
    });

    clearTimeout(timeoutId);

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP! –°—Ç–∞—Ç—É—Å: ${response.status}`);
    }

    const result = await response.json();
    return result.response.translated_text;
  } catch (error) {
    console.warn('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥:', error);
    return fallbackTranslate(text);
  }
};

const ImageGenerator = () => {
  const [image, setImage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [prompt, setPrompt] = useState('');
  const [steps, setSteps] = useState(6);

  const generateImage = async () => {
    setIsLoading(true);
    setError('');

    if (!prompt.trim()) {
      toast.error('–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      setIsLoading(false);
      return;
    }

    try {
      const translatedText = await translateWithTimeout(prompt.trim());
      toast.success(`–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: ${translatedText}`);

      // –¢–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 5000); // –¢–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥

      const response = await fetch('https://app.stronga791alice.workers.dev', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt: translatedText, steps }),
        signal: controller.signal, // –ü–µ—Ä–µ–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞
      });

      clearTimeout(timeoutId); // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω

      console.log('–û—Ç–≤–µ—Ç –æ—Ç API:', response); // –õ–æ–≥–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç

      if (!response.ok) {
        const errorData = await response.json(); // –õ–æ–≥–≥–∏—Ä—É–µ–º —Ç–µ–ª–æ –æ—à–∏–±–∫–∏
        console.error('–û—à–∏–±–∫–∞ API:', errorData);
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      }

      const data = await response.json();
      console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç API:', data); // –õ–æ–≥–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
      setImage(data.image);
      toast.success('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      if (error.name === 'AbortError') {
        toast.error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      } else {
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      }
    } finally {
      setIsLoading(false);
    }
  };

  const saveImage = () => {
    if (image) {
      const link = document.createElement('a');
      link.href = `data:image/png;base64,${image}`;
      link.download = 'generated-image.png';
      link.click();
    }
  };

  return (
    <div className="glassmorphism p-8 max-w-2xl w-full space-y-6">
      <input
        type="text"
        value={prompt}
        onChange={(e) => setPrompt(e.target.value.slice(0, 200))}
        placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä, '–∫–∏–±–µ—Ä–ø–∞–Ω–∫ —è—â–µ—Ä–∏—Ü–∞'"
        className="w-full p-2 border border-purple-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500"
      />
      <input
        type="number"
        value={steps}
        onChange={(e) => setSteps(Math.min(Math.max(1, parseInt(e.target.value)), 10))}
        placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 6)"
        min={1}
        max={10}
        className="w-full p-2 border border-purple-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-300"
      />
      <button
        onClick={generateImage}
        disabled={isLoading}
        className="button-gradient w-full font-semibold py-3 rounded-lg"
      >
        {isLoading ? '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...' : '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ üé®'}
      </button>
      {error && <div className="text-red-500 text-center">{error}</div>}
      {image && (
        <div className="mt-6 p-4 bg-purple-50 rounded-lg border border-purple-200">
          <img
            src={`data:image/png;base64,${image}`}
            alt="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
            className="w-full rounded-md"
          />
          <button
            onClick={saveImage}
            className="button-gradient w-full mt-4 font-semibold py-3 rounded-lg"
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ üíæ
          </button>
        </div>
      )}
    </div>
  );
};

export default ImageGenerator;